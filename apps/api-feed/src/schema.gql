# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

interface Node {
  id: ID!
}

type User implements Node {
  id: ID!
  userName: String!
  fullName: String!
  created_at: DateTime
  updated_at: DateTime
  followers: [ID!]!
  followings: [ID!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type UsersConnection {
  edges: [UserEdge!]
  pageInfo: UserPageInfo
}

type UserEdge {
  cursor: String
  node: User
}

type UserPageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type AuthPayload {
  user: User!
  token: String!
}

type FollowOrUnfollowPayload {
  user: User!
  clientMutationId: String
}

type Feed implements Node {
  id: ID!
  title: String!
  description: String
  isCompleted: Boolean
  created_at: DateTime
  updated_at: DateTime
  user: User!
}

type FeedConnection {
  edges: [FeedEdge!]
  pageInfo: FeedPageInfo
}

type FeedEdge {
  cursor: String
  node: Feed
}

type FeedPageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type AddFeedPayload {
  addFeedEdge: FeedResponseEdge!
  clientMutationId: String
}

type FeedResponseEdge {
  cursor: String
  node: Feed
}

type UpdateFeedPayload {
  Feed: Feed!
  clientMutationId: String
}

type DeleteFeedPayload {
  id: ID!
  clientMutationId: String
}

type Query {
  node(id: ID!): Node
  nodes(ids: ID!): [Node!]
  users(before: String, after: String, first: Float, last: Float, query: String): UsersConnection!
  usersByIds(before: String, after: String, first: Float, last: Float, ids: [ID!]!, query: String): UsersConnection!
  user(userId: String!): User!
  feeds(before: String, after: String, first: Float, last: Float, query: String): FeedConnection!
  feed(id: ID!): Feed!
}

type Mutation {
  signUp(userName: String!, fullName: String!, password: String!): AuthPayload!
  signIn(userName: String!, password: String!): AuthPayload!
  followOrUnfollow(input: FollowOrUnfollowInput!): FollowOrUnfollowPayload
  addFeed(input: AddFeedInput!): AddFeedPayload
  updateFeed(input: UpdateFeedInput!): UpdateFeedPayload
  deleteFeed(input: DeleteFeedInput!): DeleteFeedPayload
}

input FollowOrUnfollowInput {
  id: ID!
  clientMutationId: String
}

input AddFeedInput {
  title: String!
  description: String = ""
  clientMutationId: String
}

input UpdateFeedInput {
  id: ID!
  title: String
  description: String
  isCompleted: Boolean
  clientMutationId: String
}

input DeleteFeedInput {
  id: ID!
  clientMutationId: String
}

type Subscription {
  FeedAdded: FeedResponseEdge!
  FeedUpdated: Feed!
}